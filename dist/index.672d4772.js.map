{"mappings":"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","sources":["script.js"],"sourcesContent":["'use strict';\n\n\n\n\nconst form = document.querySelector('.form');\nconst containerWorkouts = document.querySelector('.workouts');\nconst inputType = document.querySelector('.form__input--type');\nconst inputDistance = document.querySelector('.form__input--distance');\nconst inputDuration = document.querySelector('.form__input--duration');\nconst inputCadence = document.querySelector('.form__input--cadence');\nconst inputElevation = document.querySelector('.form__input--elevation');\n\n//creating workout\n//creating parent workout class\nclass Workout {\n    date = new Date();\n    id = (Date.now() + '').slice(-10);\n    constructor(distance, duration, coords) {\n        this.distance = distance;\n        this.duration = duration;\n        this.coords = coords;\n    }\n    _setDescription() {\n        // prettier-ignore\n        const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    \n        this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${\n          months[this.date.getMonth()]\n        } ${this.date.getDate()}`;\n      }\n\n};\n//creating child class (running)\nclass Running extends Workout {\n    type = 'running';\n    constructor(distance, duration, coords, cadence) {\n        super(distance, duration, coords);\n        this.cadence = cadence;\n        this.calcPace();\n        this._setDescription();\n    }\n    calcPace() {\n        this.pace = this.duration / this.distance;\n    }\n}\n\n//creating chhild class  (Cycling)\nclass Cycling extends Workout {\n    type = 'cycling';\n    constructor(distance, duration, coords, elevationGain) {\n        super(distance, duration, coords)\n        this.elevationGain = elevationGain;\n        this.calcSpeed();\n        this._setDescription();\n\n    }\n    calcSpeed() {\n        this.speed = this.distance / (this.duration / 60);\n    }\n}\n\n///////////Refactoring project architecture\n//create a class called 'App\nclass App {\n    #map;\n    #mapEvent;\n    #workouts = [];\n    clicks = 0;\n    constructor() {\n        this._getPosition();\n        this._getLocalStorage();\n        form.addEventListener('submit', this._newWorkout.bind(this));\n        //implementing change in inputs \n        inputType.addEventListener('change', this._toggleElevationField.bind(this));\n        //implementing moving to marker when we clicked on workout\n        containerWorkouts.addEventListener('click', this._moveToPopup.bind(this))\n\n\n    }\n\n    //methods\n    _getPosition() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this._loadMap.bind(this), function () { alert('could not get your position') });\n        }\n\n    }\n    _loadMap(position) {\n        //displaying map\n        const latitude = position.coords.latitude;\n        const longitude = position.coords.longitude;\n        const cords = [latitude, longitude]\n        // console.log(`https://www.google.com/maps/@${latitude},${longitude}`);//link to my current loction in google maps.\n        // console.log(latitude, longitude);\n        this.#map = L.map('map').setView(cords, 13);\n\n        L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(this.#map);\n        this.#map.on('click', this._showForm.bind(this));\n        this.#workouts.forEach(work=>this.renderWorkoutMarker(work))\n\n    }\n\n    _showForm(mapE) {\n        //creating marker on click\n        form.classList.remove('hidden');\n        inputDistance.focus();\n        this.#mapEvent = mapE;\n    }\n    _hideForm() {\n        inputCadence.value = inputDistance.value = inputDuration.value = inputElevation.value = '';\n        form.style.display = 'none';\n        form.classList.add('hidden');\n        setTimeout(() => form.style.display = 'grid', 1000)\n    }\n\n    _toggleElevationField() {\n        inputCadence.closest('.form__row').classList.toggle('form__row--hidden');\n        inputElevation.closest('.form__row').classList.toggle('form__row--hidden');\n    }\n\n    _newWorkout(e) {\n        e.preventDefault();\n        let workout;\n        //create helper functions for validations\n        const validInputs = (...inputs) => (inputs.every(ele => Number.isFinite(ele)));\n        const positiveInuts = (...inputs) => inputs.every(ele => ele > 0)\n\n        //get data from form\n        const type = inputType.value;\n        const distance = +inputDistance.value;\n        const duration = +inputDuration.value;\n        const { lat, lng } = this.#mapEvent.latlng;\n        const coords = [lat, lng];\n\n        //if activity is running create runnning object\n        if (type == 'running') {\n            const type = 'running';\n            const cadence = +inputCadence.value;\n\n            //check data is valid\n            if (!validInputs(distance, duration, cadence) || !positiveInuts(distance, duration, cadence))\n                return alert('The inputs must be a positive integers ');\n            workout = new Running(distance, duration, coords, cadence);\n        }\n\n        //if activity is cycling create cycling object\n        if (type == 'cycling') {\n            const type = 'cycling'\n            const elevationGain = +inputElevation.value;\n            if (!validInputs(distance, duration) || !positiveInuts(distance, duration))\n                return alert('the inputs must be a positive integers ');\n            workout = new Cycling(distance, duration, coords, elevationGain)\n        }\n\n        //Add new object to workout array\n        this.#workouts.push(workout);\n\n\n        //invoking renderWorkout method\n        this.renderWorkout(workout)\n\n        this.renderWorkoutMarker(workout);\n\n        //hide form and clear input fields \n        this._hideForm();\n        //invoke local storage data\n        this._setLocalStorage();\n       \n\n\n\n    }\n    renderWorkoutMarker(workout){\n         //render workout on map as a markeer\n         L.marker(workout.coords, { riseOnHover: true, }).addTo(this.#map)\n         .bindPopup(L.popup({\n             maxWidth: 200,\n             maxHeight: 30,\n             autoClose: false,\n             closeOnClick: false,\n             className: `${workout.type}-popup`,\n         }))\n         .setPopupContent(`${workout.description}`)\n         .openPopup();\n    }\n\n    //Render workout on list \n    renderWorkout(workout) {\n        let html = ` <li class=\"workout workout--${workout.type}\" data-id=\"${workout.id}\">\n        <h2 class=\"workout__title\">${workout.description}</h2>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">${workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'}</span>\n          <span class=\"workout__value\">${workout.distance}</span>\n          <span class=\"workout__unit\">km</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⏱</span>\n          <span class=\"workout__value\">${workout.duration}</span>\n          <span class=\"workout__unit\">min</span>\n        </div>`\n        //implementing cadence and elevation\n        if (workout.type === 'running') {\n            html += ` <div class=\"workout__details\">\n            <span class=\"workout__icon\">⚡️</span>\n            <span class=\"workout__value\">${workout.pace}</span>\n            <span class=\"workout__unit\">min/km</span>\n          </div>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">🦶🏼</span>\n            <span class=\"workout__value\">17${workout.cadence}</span>\n            <span class=\"workout__unit\">spm</span>\n          </div>\n        </li>`\n        }\n        if (workout.type === 'cycling') {\n            html += `<div class=\"workout__details\">\n            <span class=\"workout__icon\">⚡️</span>\n            <span class=\"workout__value\">${workout.speed}</span>\n            <span class=\"workout__unit\">km/h</span>\n          </div>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">⛰</span>\n            <span class=\"workout__value\">${workout.elevationGain}</span>\n            <span class=\"workout__unit\">m</span>\n          </div>\n        </li>`\n        }\n        form.insertAdjacentHTML(\"afterend\", html);\n    }\n\n    //_moveToPopup method\n    _moveToPopup(e) {\n        if (!this.#map) return;\n        const workoutEl = e.target.closest('.workout');\n        // console.log(workoutEl);\n        if (!workoutEl) return;\n        const workout = this.#workouts.find(work => work.id === workoutEl.dataset.id);\n        this.#map.setView(workout.coords, '13', {\n            animation: true,\n            pan: {\n                duration: 1,\n            }\n        })\n        this._countClicks();\n    }\n    _countClicks() {\n        this.clicks++;\n        console.log(this.clicks)\n    }\n    _setLocalStorage() {\n        localStorage.setItem('workouts', JSON.stringify(this.#workouts));\n    }\n    _getLocalStorage() {\n        const data = JSON.parse(localStorage.getItem('workouts'));\n        console.log(data);\n        if (!data) return;\n\n        this.#workouts = data;\n        this.#workouts.forEach(work => {\n            this.renderWorkout(work);\n        })\n\n    }\n\n\n\n}\nconst app = new App();\n//End of project\n\n\n\n\n\n\n\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}